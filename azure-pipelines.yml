# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      
      invoke-Command {
      Write-Output 'Set the Execution Policy'
      Set-ExecutionPolicy Unrestricted -Scope Process -Force
      Write-Output 'Download the agent'
      iex ((New-Object System.Net.WebClient).DownloadString('https://download.srcclr.com/ci.ps1'))
      Write-Output 'Scan the project'
      $env:SRCCLR_API_TOKEN
      $Env:SRCCLR_Files="$(build.artifactstagingdirectory)"
      srcclr scan  
      }
- task: Veracode@2
  inputs:
    ConnectionDetailsSelection: 'Endpoint'
    AnalysisService: 'Veracode_API'
    veracodeAppProfile: '$(system.teamProject)'
    version: '$(build.buildNumber)'
    filepath: '$(build.artifactstagingdirectory)'
    createSandBox: false
    createProfile: false
    scanStatusCheckInterval: '60'
    importResults: true
    failBuildOnPolicyFail: false

- task: Veracode Flaw Importer@2
  inputs:
    ConnectionDetailsSelection: 'Endpoint'
    AnalysisService: 'Veracode_API'
    veracodeAppProfile: '$(system.teamProject)'
    sandboxName: 
    importType: 'All Unmitigated Flaws Violating Policy'
    workItemType: 'Task'
    area: '$(system.teamProject)'
    flawImportLimit: '1000'