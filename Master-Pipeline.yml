# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - Feature/*

    exclude:
      - releases/*
      - master

pool:
  vmImage: 'windows-latest'

variables:
  - group: veracode_variablegroup

stages:
- stage: Build
  displayName: Build .NET App
  jobs:
  - job: VS_Build


steps:
### Fetch NuGet Tool ###
  - task: NuGetToolInstaller@1

### Install NuGet Tool ###
  - task: NuGetCommand@2
    displayName: Install NuGet
    inputs:
      restoreSolution: '$(solution)'

### Build APP (MSBuild) ###
  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/p:OutputPath=bin /p:DeployOnBuild=true /p:PrecompileBeforePublish=true /p:EnableUpdateable=false /p:DebugSymbols=true /p:WDPMergeOption="CreateSeparateAssembly" /p:WebPublishMethod="FileSystem" /p:UseMerge=false'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - stage: SecurityTesting
    displayName: Security Testing
    jobs:
    - job: Sast_Sandbox_scan
      steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: WebApp
            patterns: '**/*.war'
            path: $(Build.SourcesDirectory)/bin

        - task: Veracode@3
          inputs:
            ConnectionDetailsSelection: 'Endpoint'
            AnalysisService: 'Veracode_API'
            veracodeAppProfile: '$(system.teamProject)'
            version: '$(build.buildNumber)'
            filepath: '$(Build.SourcesDirectory)/bin'
            createProfile: false
            failTheBuildIfVeracodeScanDidNotInitiate: false
            createSandBox: false
            scanStatusCheckInterval: '60'
            importResults: false
            failBuildOnPolicyFail: false
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: 'D:\a\1\s\filtered_results.json'
            ArtifactName: 'pipeline scan results'
            publishLocation: 'Container'

### Veracode SCA Scan (3rd Party) ###
#- task: PowerShell@2
#  displayName: Veracode SCA
#  inputs:
#    targetType: 'inline'
#    script: |
#         Set-ExecutionPolicy AllSigned -Scope Process -Force
#         $ProgressPreference = "silentlyContinue"
#         iex ((New-Object System.Net.WebClient).DownloadString('https://download.srcclr.com/ci.ps1'))
#         srcclr scan $(Build.SourcesDirectory)

# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java









        
          

